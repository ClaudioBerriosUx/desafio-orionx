{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Claudio Berrios\\\\Desktop\\\\orionx\\\\desafio\\\\src\\\\components\\\\InvoiceMidddle.js\";\nimport React, { Component } from 'react';\nimport { product } from './Product.json';\n\nclass InvoiceMidddle extends Component {\n  constructor() {\n    super();\n    this.state = {\n      product\n    };\n  }\n\n  render() {\n    const product = this.state.product.map(product => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, product.nombre, \" \", React.createElement(\"span\", {\n        className: \"descript\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, product.tipo)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, product.cantidad), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, product.valor));\n    });\n    return React.createElement(\"div\", {\n      className: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"PRODUCT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"UNIT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"PRICE\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, product, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      className: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, suma)))));\n  }\n\n}\n\nvar suma = 0;\nvar json = [{\n  \"nombre\": \"Espresso \",\n  \"tipo\": \"(large)\",\n  \"cantidad\": \"1\",\n  \"valor\": 290\n}, {\n  \"nombre\": \"Cappuccino\",\n  \"tipo\": \"(small)\",\n  \"cantidad\": \"2\",\n  \"valor\": 700\n}];\njson.forEach(function (elemento, indice) {\n  suma += elemento[\"valor\"];\n});\nconsole.log(suma);\nexport default InvoiceMidddle;\nconst number = document.querySelector('.number');\n\nfunction formatNumber(n) {\n  n = String(n).replace(/\\D/g, \"\");\n  return n === '' ? n : Number(n).toLocaleString();\n}\n\nnumber.addEventListener('keyup', e => {\n  const element = e.target;\n  const value = element.value;\n  element.value = formatNumber(value);\n});","map":{"version":3,"sources":["C:/Users/Claudio Berrios/Desktop/orionx/desafio/src/components/InvoiceMidddle.js"],"names":["React","Component","product","InvoiceMidddle","constructor","state","render","map","nombre","tipo","cantidad","valor","suma","json","forEach","elemento","indice","console","log","number","document","querySelector","formatNumber","n","String","replace","Number","toLocaleString","addEventListener","e","element","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport  { product } from './Product.json';\r\n\r\nclass InvoiceMidddle extends Component{\r\n    constructor(){\r\nsuper();\r\nthis.state = {\r\n\r\n    product\r\n\r\n     }\r\n    }\r\n\r\n    render(){        \r\n        const product = this.state.product.map((product) =>{\r\n            return(  \r\n                <tr >\r\n                  <td>{product.nombre} <span className=\"descript\">{product.tipo}</span></td>\r\n                  <td>{product.cantidad}</td>\r\n                  <td>{product.valor}</td>\r\n                </tr>         \r\n            ) \r\n         })\r\n\r\n      return(     \r\n        <div className=\"middle\">\r\n        <table className=\"table \">           \r\n        <tbody>\r\n          <tr>        \r\n            <th>PRODUCT</th>\r\n            <th>UNIT</th>\r\n            <th>PRICE</th>\r\n          </tr>\r\n        </tbody>\r\n        <tbody>\r\n\r\n        {product}\r\n\r\n        <tr>\r\n            <td>Total</td>\r\n            <td></td>\r\n      <td className=\"number\">{suma}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n     </div>\r\n       \r\n        );  \r\n    }\r\n}\r\n\r\nvar suma=0;\r\nvar json = [\r\n    {\r\n      \"nombre\" : \"Espresso \",\r\n      \"tipo\": \"(large)\",\r\n      \"cantidad\" : \"1\",\r\n      \"valor\" : 290\r\n    },\r\n    {\r\n        \"nombre\" : \"Cappuccino\",\r\n        \"tipo\": \"(small)\",\r\n        \"cantidad\" : \"2\",            \r\n        \"valor\" : 700\r\n      }\r\n];\r\n\r\n\r\njson.forEach(function(elemento, indice) {\r\n    suma += elemento[\"valor\"];\r\n});\r\nconsole.log(suma);\r\nexport default InvoiceMidddle;\r\n\r\nconst number = document.querySelector('.number');\r\n\r\nfunction formatNumber (n) {\r\n\tn = String(n).replace(/\\D/g, \"\");\r\n  return n === '' ? n : Number(n).toLocaleString();\r\n}\r\nnumber.addEventListener('keyup', (e) => {\r\n\tconst element = e.target;\r\n\tconst value = element.value;\r\n  element.value = formatNumber(value);\r\n});"]},"metadata":{},"sourceType":"module"}